name: Update Manga Library
on:
  push:
    branches: [main]
  schedule:
    - cron: '0 4 1 * *'
jobs:
  Search: # 检测更新并下载
    runs-on: ubuntu-latest
    outputs:
      UPDATE_FLAG: ${{ steps.core.outputs.UPDATE_FLAG }}
      MANGA_CHAPTER: ${{ steps.core.outputs.MANGA_CHAPTER }}
      MANGA_PDFNAME: ${{ steps.core.outputs.MANGA_PDFNAME }}
      EMAIL_DATE: ${{ steps.core.outputs.EMAIL_DATE }}
    env: 
      SOURCE_URL: ${{ secrets.SOURCE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python # 配置 Python
        uses: actions/setup-python@v5
      - name: Install Modules # 配置依赖库
        run: |
          pip install pymupdf
          pip install pytz
          pip install selenium
          pip install webdriver-manager
      - name: Run Script # 运行脚本
        id: core
        run: python main.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ steps.core.outputs.MANGA_PDFNAME }}
          path: ${{ steps.core.outputs.MANGA_PDFNAME }}
          retention-days: 0
  Return: # 获取最新话
    needs: Search
    if: needs.Search.outputs.UPDATE_FLAG == 'True' # 判断是否有更新
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4.1.2
        with:
          name: ${{ needs.Search.outputs.MANGA_PDFNAME }}
      - name: Send mail # 将最新话邮件发至邮箱
        uses: betterfor/action-send-mail@main
        with:
          server_address: smtp.qq.com
          server_port: 587
          from: クララ
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          to: ${{ secrets.MAIL_TARGET }}
          subject: "[New!] この美術部には問題がある ${{ needs.Search.outputs.MANGA_CHAPTER }} 作品目"
          body: "この美術部には問題がある ${{ needs.Search.outputs.MANGA_CHAPTER }} 作品目が更新されました。\n\n\n\n\n\nクララ\n\n${{ needs.Search.outputs.EMAIL_DATE }}"
          attachments: ${{ needs.Search.outputs.MANGA_PDFNAME }}
      - name: Create Tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/${{ needs.Search.outputs.MANGA_CHAPTER }}',
                sha: context.sha
            })